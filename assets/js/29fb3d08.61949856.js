"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[872],{3905:function(e,n,a){a.d(n,{Zo:function(){return p},kt:function(){return u}});var t=a(7294);function o(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function r(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function i(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?r(Object(a),!0).forEach((function(n){o(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function s(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=t.createContext({}),d=function(e){var n=t.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):i(i({},n),e)),a},p=function(e){var n=d(e.components);return t.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var a=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=d(a),u=o,k=m["".concat(l,".").concat(u)]||m[u]||c[u]||r;return a?t.createElement(k,i(i({ref:n},p),{},{components:a})):t.createElement(k,i({ref:n},p))}));function u(e,n){var a=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var d=2;d<r;d++)i[d]=a[d];return t.createElement.apply(null,i)}return t.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5575:function(e,n,a){a.r(n),a.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return d},toc:function(){return p},default:function(){return m}});var t=a(7462),o=a(3366),r=(a(7294),a(3905)),i=["components"],s={sidebar_position:2},l="Kubernetes",d={unversionedId:"herramientas/kubernetes",id:"herramientas/kubernetes",title:"Kubernetes",description:"Es una tecnologia que permite orquestar contenedores. Podemos usar esta",source:"@site/docs/herramientas/kubernetes.md",sourceDirName:"herramientas",slug:"/herramientas/kubernetes",permalink:"/docs/herramientas/kubernetes",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/herramientas/kubernetes.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Docker",permalink:"/docs/herramientas/docker"},next:{title:"GIT",permalink:"/docs/herramientas/git"}},p=[{value:"Instalacion",id:"instalacion",children:[],level:2},{value:"Contextos",id:"contextos",children:[{value:"Kubeconfig",id:"kubeconfig",children:[],level:3},{value:"Manejo de contextos",id:"manejo-de-contextos",children:[],level:3},{value:"Archivos de configuracion",id:"archivos-de-configuracion",children:[],level:3}],level:2},{value:"CheatSheet (Comandos mas usados)",id:"cheatsheet-comandos-mas-usados",children:[],level:2},{value:"Namespace",id:"namespace",children:[],level:2},{value:"Pods",id:"pods",children:[{value:"Manifiestos de pods",id:"manifiestos-de-pods",children:[],level:3},{value:"Variables de Entorno",id:"variables-de-entorno",children:[],level:3},{value:"Recursos",id:"recursos",children:[{value:"Tipos de Recursos",id:"tipos-de-recursos",children:[],level:4}],level:3},{value:"Readiness Probe",id:"readiness-probe",children:[],level:3},{value:"Liveness Probe",id:"liveness-probe",children:[],level:3},{value:"Startup Probe",id:"startup-probe",children:[{value:"Ejemplo completo",id:"ejemplo-completo",children:[],level:4}],level:3}],level:2},{value:"Deployments",id:"deployments",children:[{value:"Replicas",id:"replicas",children:[],level:3},{value:"Manifiesto",id:"manifiesto",children:[],level:3}],level:2},{value:"DaemonSet",id:"daemonset",children:[{value:"Manifiesto",id:"manifiesto-1",children:[],level:3}],level:2},{value:"StatefullSet",id:"statefullset",children:[{value:"PVC (Persistant Volume Claim)",id:"pvc-persistant-volume-claim",children:[],level:3},{value:"Manifiesto",id:"manifiesto-2",children:[],level:3}],level:2},{value:"Networking",id:"networking",children:[{value:"Servicios",id:"servicios",children:[],level:3},{value:"Ingress",id:"ingress",children:[],level:3}],level:2},{value:"ConfigMaps",id:"configmaps",children:[{value:"Manifiesto",id:"manifiesto-3",children:[],level:3}],level:2},{value:"Secrets",id:"secrets",children:[],level:2}],c={toc:p};function m(e){var n=e.components,a=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,t.Z)({},c,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"kubernetes"},"Kubernetes"),(0,r.kt)("p",null,"Es una tecnologia que permite orquestar contenedores. Podemos usar esta\n",(0,r.kt)("a",{parentName:"p",href:"https://sre.google/sre-book/table-of-contents/"},"referencia"),"."),(0,r.kt)("p",null,"Kubernetes es declarativo es decir yo creo un manifiesto donde indico cuantos\ncontenedores quiero, que contenedores quiero, etc."),(0,r.kt)("h2",{id:"instalacion"},"Instalacion"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Necesitaremos ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl")," el cual es el cliente de kubernetes. ",(0,r.kt)("inlineCode",{parentName:"p"},"Kubectl")," se conecta al cluster de Kubernetes\ny por medio de la terminal podremos manejar nuestro cluster. Podemos seguir el siguiente\n",(0,r.kt)("a",{parentName:"p",href:"https://kubernetes.io/es/docs/tasks/tools/install-kubectl/"},"enlace")," para instalar kubectl.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Para saber si tenemos kubectl usamos el siguiente comando:"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl version --client=true\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Ahora necesitamos instalar nuestro cluster, la forma mas facil de instalar un cluster de\nkubernetes es con ",(0,r.kt)("inlineCode",{parentName:"p"},"docker Desktop"),". Tambien podemos usar ",(0,r.kt)("inlineCode",{parentName:"p"},"minikube"),", para saber como instalar\npara saber como instalar ",(0,r.kt)("inlineCode",{parentName:"p"},"minikube")," podemos usar el siguiente\n",(0,r.kt)("a",{parentName:"p",href:"https://v1-19.docs.kubernetes.io/es/docs/tasks/tools/install-minikube/"},"enlace"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Luego de tener el cliente de kubernetes ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl")," y tener un cluster de kubernetes creado.\nNecesitaremos conectar ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl")," a dicho cluster por medio de un archivo de configuracion llamado\n",(0,r.kt)("inlineCode",{parentName:"p"},"kube.config")))),(0,r.kt)("h2",{id:"contextos"},"Contextos"),(0,r.kt)("p",null,"Los contextos son la combinacion entre usuarios y cluster. Dice que usuario usa que cluster."),(0,r.kt)("h3",{id:"kubeconfig"},"Kubeconfig"),(0,r.kt)("p",null,"Son los archivos que tienen configurado los cluster, los usuarios y los contextos que tenemos en nuestra maquina\npara controlar los cluster de kubernetes. Estos archivos de configuracion nos permite conectarnos a nuestros\nclusters de kubernetes sin tener que estar configurando el servidor, usuario, configuracion, etc."),(0,r.kt)("p",null,"Estos archivos tienen 3 partes: ",(0,r.kt)("inlineCode",{parentName:"p"},"users"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"clusters")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"contexts")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{5-7,9-13,15-19}","{5-7,9-13,15-19}":!0},"apiVersion: 1\nkind: Config\npreferences: {}\n\nusers:\n    - name: docker-desktop\n    - name: minikube\n\nclusters:\n    - cluster:\n      name: docker-desktop\n    - cluster:\n      name: minikube\n\ncontexts:\n    - context:\n      name: docker-desktop\n    - context:\n      name: minikube\n\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Los usuarios necesitaran un ",(0,r.kt)("inlineCode",{parentName:"li"},"certificado")," y una ",(0,r.kt)("inlineCode",{parentName:"li"},"llave"),"."),(0,r.kt)("li",{parentName:"ul"},"Los clusters necesitara un ",(0,r.kt)("inlineCode",{parentName:"li"},"CA")," y una ",(0,r.kt)("inlineCode",{parentName:"li"},"ip"),"."),(0,r.kt)("li",{parentName:"ul"},"Los contextos usaran un ",(0,r.kt)("inlineCode",{parentName:"li"},"usuario")," y un ",(0,r.kt)("inlineCode",{parentName:"li"},"cluster"),".")),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Puedes dar el valor del certificado en base64 quemado o puedes poner la ruta del archivo"))),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"El archivo kubeconfig lo podemos encontrar en la ruta ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.kube/")," puedes usar nano para abrirlo\n",(0,r.kt)("inlineCode",{parentName:"p"},"nano ~/.kube/config")," o usar el comando ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl config view")))),(0,r.kt)("h3",{id:"manejo-de-contextos"},"Manejo de contextos"),(0,r.kt)("p",null,"Para ver los nodos de un contexto usas el siguiente comando "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl --context=${CONTEXT} get nodes\n")),(0,r.kt)("p",null,"Puedes usar ",(0,r.kt)("inlineCode",{parentName:"p"},"kubeselect")," para que puedas ver todos los contextos que tienes y seleccionar\nen cual quieres trabajar con esto te evitas el ",(0,r.kt)("inlineCode",{parentName:"p"},"--context"),". Para su instalacion usa el siguiente\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/fatliverfreddy/kubeselect"},"link"),"."),(0,r.kt)("h3",{id:"archivos-de-configuracion"},"Archivos de configuracion"),(0,r.kt)("p",null,"Si posees un kubeconfig para tu cluster lo puedes usar de las siguientes formas:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Sin variable de entorno")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl --kubeconfig=${PATH_TO_KUBECONFIG_FILE} get nodes\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Con variable de entorno")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export KUBECONFIG=${PATH_TO_KUBECONFIG_FILE}\nkubectl get nodes\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Varios archivos de configuracion pero no quiero juntarlos")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export KUBECONFIG=${PATH_TO_KUBECONFIG_FILE}:${PATH_TO_OTHER_KUBECONFIG_FILE}\nkubectl --context=${CONTEXT_NAME} get nodes\n")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Si queremos hacer un merge de todos los archivos que tenemos de configuracion")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export KUBECONFIG=${PATH_TO_KUBECONFIG_FILE}:${PATH_TO_OTHER_KUBECONFIG_FILE}\nkubectl config view --merge --flatten > config.yaml\n")),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},"Si queremos extraer un contexto de un archivo con configuraciones ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export KUBECONFIG=config.yaml\nkubectl config view --minify \\\n--flatten \\\n--context=${CONTEXT_NAME} \\\n> ${CONTEXT_NAME}.yaml\n")),(0,r.kt)("h2",{id:"cheatsheet-comandos-mas-usados"},"CheatSheet (Comandos mas usados)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"kubectl get")," Sirve para obtener recursos."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"kubectl edit")," Sirve para editar un recurso."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"kubectl delete")," Borrar un recurso."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"kubectl apply")," Aplicar manifiestos en el cluster."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"kubectl exec")," Aplicar comandos a un contenedor."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Kubectl logs")," Ver los logs de un pod o contenedor."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"kubectl cp")," Copiar archivos desde nuestro pc al contenedor."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"kubectl port-forward")," Para forwardear un puerto que un contenedor este exponiendo."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"kubectl drain")," Vamos sacar todos los contenedores de un nodo."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"kubectl cordon")," Hacer que ese nodo ya no reciba mas contenedores."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"kubectl uncordon")," lo contrario a cordon."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"kubect config get-contexts")," Para ver todos los contextos del archivo kubeconfig."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"kubectl config use-context")," Para setear un contexto, puedes revisar el manejo de contextos\n",(0,r.kt)("a",{parentName:"li",href:"#manejo-de-contextos"},"aqui"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"kubectl describe")," Para ver los eventos de los pods.")),(0,r.kt)("p",null,"Kubernetes tiene la opcion de usar abreviaciones podemos verlas\n",(0,r.kt)("a",{parentName:"p",href:"https://blog.heptio.com/kubectl-resource-short-names-heptioprotip-c8eff9fb7202"},"aqui"),"."),(0,r.kt)("h2",{id:"namespace"},"Namespace"),(0,r.kt)("p",null,"Es una division logica de tu cluster de kubernetes, permite separar la carga del cluster."),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Por default los datos dentro de los ns si se pueden ver entre ellos"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get ns\n")),(0,r.kt)("h2",{id:"pods"},"Pods"),(0,r.kt)("p",null,"Es un set de contenedores, este set puede tener uno o varios contenedores pero normalmente\nun pod contiene un contenedor."),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"El ",(0,r.kt)("inlineCode",{parentName:"p"},"hash")," que tiene cada uno de los pods es generado por el template de deployment"))),(0,r.kt)("p",null,"Podemos usar ",(0,r.kt)("inlineCode",{parentName:"p"},"kubect get pods")," para obtener los pods, ademas podemos usar ",(0,r.kt)("inlineCode",{parentName:"p"},"kubectl get pods -o wide"),"\npara tener una informacion mas detallada sobre los pods."),(0,r.kt)("h3",{id:"manifiestos-de-pods"},"Manifiestos de pods"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{2}","{2}":!0},"apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\nspec:\n  containers:\n  - name: nginx\n    image: nginx:alpine\n")),(0,r.kt)("p",null,"La seccion de ",(0,r.kt)("inlineCode",{parentName:"p"},"metadata")," es donde pondremos el nombre del pod y algunas etiquetas\nque nos seran utiles a la hora de manejar recursos."),(0,r.kt)("p",null,"Para aplicar el manifiesto del pod usamos el siguiente comando:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl apply -f ${PAT_TO_THE_FILE}\n")),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Sino agregamos un ns en el manifiesto, lo creara en el ns que estemos ubicados actualmente."))),(0,r.kt)("p",null,"Para poder correr un comando en el pod podemos usar el siguiente comando."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"docker exec -it ${POD} -- sh\n")),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"no se necesita tener activado en el firewall del nodo ",(0,r.kt)("inlineCode",{parentName:"p"},"ssh"),", porque cuando me conecto a un pod usando\n",(0,r.kt)("inlineCode",{parentName:"p"},"docker exec -it ${POD} -- sh")," estoy usando el api de kubernetes"))),(0,r.kt)("h3",{id:"variables-de-entorno"},"Variables de Entorno"),(0,r.kt)("p",null,"Por el momento existen dos formas para manejar tus variables de entorno dentro de kubernetes:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Quemar los valores de las variables de entorno")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title='pod.yaml' {9-17}",title:"'pod.yaml'","{9-17}":!0},'apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\nspec:\n  containers:\n  - name: nginx\n    image: nginx:alpine\n    env:\n    - name: MI_VARIABLE\n      value: "pelado"\n    - name: MI_OTRA_VARIABLE\n      value: "pelade"\n    - name: DD_AGENT_HOST\n      valueFrom:\n        fieldRef:\n          fieldPath: status.hostIP\n')),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"el ",(0,r.kt)("inlineCode",{parentName:"p"},"status.hostIP")," es un valor que lo saca del ",(0,r.kt)("inlineCode",{parentName:"p"},"downward api")," de kubernetes tiene algunos otros valores utiles,\nque podemos utilizar para mas ",(0,r.kt)("a",{parentName:"p",href:"https://kubernetes.io/docs/tasks/inject-data-application/downward-api-volume-expose-pod-information/"},"informacion"),"."))),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Utilizar un manifiesto tipo secret para mas informacion ir a la seccion ",(0,r.kt)("a",{parentName:"li",href:"#secrets"},"secrets"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title='secrets.yaml' {4-5,7}",title:"'secrets.yaml'","{4-5,7}":!0},"apiVersion: v1\nkind: Secret\nmetadata:\n  name: misecreto\ntype: Opaque\ndata:\n  password: PasswordSecreta # Puede estar en base64 \n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title='pod.yaml' {14-18}",title:"'pod.yaml'","{14-18}":!0},'apiVersion: v1\nkind: Pod\nmetadata:\n  name: envar-demo\n  labels:\n    purpose: demonstrate-envars\nspec:\n  containers:\n  - name: envar-demo-container\n    image: gcr.io/google-samples/node-hello:1.0\n    env:\n    - name: ENV1\n      value: "Esta es una variable comun"\n    - name: ENV2\n      valueFrom:\n        secretKeyRef:\n          name: misecreto\n          key: password\n')),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Con esto conseguimos que el secret este dentro del ns y que todas las cargas puedan acceder\na estas variables de entornos."))),(0,r.kt)("h3",{id:"recursos"},"Recursos"),(0,r.kt)("p",null,"Es una forma de asignarle recursos a nuestros contenedores, los recursos se asignan por contenedor\nno por pod. Por ende podemos tener dos contenedores cada uno con sus recursos y a la final los\nrecursos del pod seria la suma de los recursos de cada contenedor mas lo que necesita el pod para\nfuncionar."),(0,r.kt)("h4",{id:"tipos-de-recursos"},"Tipos de Recursos"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Request"),": Son los recursos que le vamos a garantizar al pod que va a tener (Por mas que no los\nuse).")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"Limits"),": Es el limite que el pod puede usar no puede usar mas de eso."))),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Aunque tengas una instancia de 1 core no necesariamente tienes disponible 1 core debido a que hay\nprocesos de kubernetes corriendo en el cluster aunque no tengas ningun ",(0,r.kt)("inlineCode",{parentName:"p"},"pod")," corriendo. Por ende\naunque tengas 1 core no necesariamente podras correr 5 pods de 100 mili cores."))),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Si un pod empieza a utilizar mas ",(0,r.kt)("inlineCode",{parentName:"p"},"recursos")," que los que estan puesto en el limite, el kernel de linux\nprocedera a matar el proceso, se va a restartear el pod."),(0,r.kt)("p",{parentName:"div"},"Esto no pasa en el cpu debido a que nunca se va a pasar del limite que tenemos. Por ende el kernel\nnunca lo va a matar, lo que pasa es que si el pod quiere usar mas cpu del limite permitido, lo que\nhara el kernel es ",(0,r.kt)("inlineCode",{parentName:"p"},"cpu throttling"),", es decir, lo va a ahorcar hasta que el pod use esa velocidad."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\nspec:\n  containers:\n  - name: nginx\n    image: nginx:alpine\n    resources:\n      requests:\n        memory: "64Mi"\n        cpu: "200m"\n      limits:\n        memory: "128Mi"\n        cpu: "500m"\n')),(0,r.kt)("h3",{id:"readiness-probe"},"Readiness Probe"),(0,r.kt)("p",null,"es una forma de explicarle a kubernetes que el pod esta listo para recibir trafico. "),(0,r.kt)("p",null,"Lo que hace kubernetes es hacer un get a la ruta designada y esperar un 200. En caso\nde norecibir un 200 el pod no se encuentra Ready."),(0,r.kt)("h3",{id:"liveness-probe"},"Liveness Probe"),(0,r.kt)("p",null,"es una forma de explicarle a kubernetes que el pod esta vivo, es decir, que no\nquiero que lo mate o haga un restart."),(0,r.kt)("p",null,"Lo que hace kubernetes es chequear que el puerto 80 este abierto."),(0,r.kt)("p",null,"Hay 3 tipos de pruebas de ",(0,r.kt)("inlineCode",{parentName:"p"},"liveness")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"readiness"),":"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Comando si me retorna el comando ",(0,r.kt)("inlineCode",{parentName:"li"},"0")," el contenedor es considerado vivo, caso contrario\nfalla la prueba por ende esta muerto y procede a reiniciar el contenedor.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"livenessProbe:\n      exec:\n        command:\n        - cat\n        - /tmp/healthy\n      initialDelaySeconds: 5\n      periodSeconds: 5\n")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Por una peticion get, si devuelve la ruta un codigo mayor o igual a 200 y menor a 400 esta vivo,\ncaso contrario la prueba falla y porcede a reiniciar el pod ")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"livenessProbe:\n      httpGet:\n        path: /healthz\n        port: 8080\n        httpHeaders:\n        - name: Custom-Header\n          value: Awesome\n      initialDelaySeconds: 3\n      periodSeconds: 3\n")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Por ultimo tenemos la peticion TCP, si se puede establecer conexion en el puerto el contenedor\nes considerado vivo, caso contrario la prueba falla y procede a reiniciar el pod.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"livenessProbe:\n      tcpSocket:\n        port: 8080\n      initialDelaySeconds: 15\n      periodSeconds: 20\n")),(0,r.kt)("h3",{id:"startup-probe"},"Startup Probe"),(0,r.kt)("p",null,"es una forma de saber cuando el contenedor inicio, esto desabilita al ",(0,r.kt)("inlineCode",{parentName:"p"},"readiness probe")," y\n",(0,r.kt)("inlineCode",{parentName:"p"},"livenes probe")," para que no interfieran con el inicio del contenedor. Esto suele usarse en\ncontenedores lentos o aplicaciones de legado."),(0,r.kt)("p",null,"El startup probe lo que hace es esperar un tiempo de ",(0,r.kt)("inlineCode",{parentName:"p"},"failureThreshold * periodSeconds")," para\nproceder a realizar la prueba. Luego de salir ok el ",(0,r.kt)("inlineCode",{parentName:"p"},"readiness")," y ",(0,r.kt)("inlineCode",{parentName:"p"},"liveness")," empiezan a funcioanr"),(0,r.kt)("h4",{id:"ejemplo-completo"},"Ejemplo completo"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{10-15,17-21,23-28}","{10-15,17-21,23-28}":!0},"apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\nspec:\n  containers:\n  - name: nginx\n    image: nginx:alpine\n\n    readinessProbe:\n      httpGet:\n        path: /\n        port: 80\n      initialDelaySeconds: 5\n      periodSeconds: 10\n\n    livenessProbe:\n      tcpSocket:\n        port: 80\n      initialDelaySeconds: 15\n      periodSeconds: 20\n    \n    startupProbe:\n      httpGet:\n        path: /healthz\n        port: liveness-port\n      failureThreshold: 30\n      periodSeconds: 10\n")),(0,r.kt)("h2",{id:"deployments"},"Deployments"),(0,r.kt)("p",null,"Es un template para crear un pod. Ademas tiene un conjunto de reglas y etiquetas para\nmanejar dichos pods."),(0,r.kt)("h3",{id:"replicas"},"Replicas"),(0,r.kt)("p",null,"Son la cantidad de pods que queremos en nuestro deployment, es decir, que si borramos un pod\nkubernetes instantaneamente creara uno de vuelta ya que siempre va a tratar de tener la cantidad\nde pods que especificamos en el numero de replicas."),(0,r.kt)("h3",{id:"manifiesto"},"Manifiesto"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{1-2,9}","{1-2,9}":!0},"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx-deployment\nspec:\n  selector:\n    matchLabels:\n      app: nginx\n  replicas: 2\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:alpine\n")),(0,r.kt)("h2",{id:"daemonset"},"DaemonSet"),(0,r.kt)("p",null,"Es una forma de deployar un pod pero este pod estara deployado en todos los nodos, es decir,\nsi tengo 3 nodos tendre 3 pods con una replica en cada nodo."),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Usa daemonset para servicios de monitoreo o captura de logs."))),(0,r.kt)("p",null,"Podemos obtener todos los DaemonSet que tenemos "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get ds\n")),(0,r.kt)("h3",{id:"manifiesto-1"},"Manifiesto"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{1-2}","{1-2}":!0},"apiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  name: nginx-deployment\nspec:\n  selector:\n    matchLabels:\n      app: nginx\n  template:\n    metadata:\n      labels:\n        app: nginx\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:alpine\n")),(0,r.kt)("h2",{id:"statefullset"},"StatefullSet"),(0,r.kt)("p",null,"Es una forma de deployar pods conservando sus estados atraves de volumenes, es decir, el pod se muere\ny todos los logs o informacion se elemina tambien, al guardarlos en un volumen lo que haremos es que\naunque muera el pod el nuevo pod que creara kubernetes apunte a dicho volumen conservando la informacion."),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Esto es util para bases de datos por ejemplo."))),(0,r.kt)("p",null,"Podemos hacer un get de todos los ",(0,r.kt)("inlineCode",{parentName:"p"},"sts")," que tenemos, ",(0,r.kt)("inlineCode",{parentName:"p"},"sts")," es la abreviacion de statefullset."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get sts\n")),(0,r.kt)("h3",{id:"pvc-persistant-volume-claim"},"PVC (Persistant Volume Claim)"),(0,r.kt)("p",null,"Debido a que estamos usando ",(0,r.kt)("inlineCode",{parentName:"p"},"StatefullSet")," y estos estan asociados con volumenes los cuales al final del\ndia son discos duros persistentes, cuando declaramos declaramos el volumen kubernetes se conecta a la api\ndel proveedor de nube y le solicita crear dicho disco duro, configurarlo y realizar el attach al nodo solicitante.\nPara esto usamos el ",(0,r.kt)("inlineCode",{parentName:"p"},"StorageClassName"),"."),(0,r.kt)("p",null,"Para poder saber cuales son los pvc que tenemos podemos ejecutar el siguiente comando:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl get pvc\n\nkubectl describe pvc ${PVC_NAME}\n")),(0,r.kt)("h3",{id:"manifiesto-2"},"Manifiesto"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{1-2,10,22-24,26-35}","{1-2,10,22-24,26-35}":!0},'apiVersion: apps/v1\nkind: StatefulSet\nmetadata:\n  name: my-csi-app-set\nspec:\n  selector:\n    matchLabels:\n      app: mypod\n  serviceName: "my-frontend"\n  replicas: 1\n  template:\n    metadata:\n      labels:\n        app: mypod\n    spec:\n      containers:\n      - name: my-frontend\n        image: busybox\n        args:\n        - sleep\n        - infinity\n        volumeMounts:\n        - mountPath: "/data"\n          name: csi-pvc\n\n  volumeClaimTemplates:\n  - metadata:\n      name: csi-pvc\n    spec:\n      accessModes:\n      - ReadWriteOnce\n      resources:\n        requests:\n          storage: 5Gi\n      storageClassName: do-block-storage\n')),(0,r.kt)("h2",{id:"networking"},"Networking"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"El pod es el que tiene la ip no los contenedores, es decir, si tengo 3 contenedores dentro\nde un pod asegurarme de cambiar los puertos para que no colisionen entre si ")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Hay un agente dentro de kubernetes llamado `` que se encarga de crear\nlas diferentes rutas para que los pods puedan comunicarse entre los nodos o instancias.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Kubernetes tiene una base de datos en ",(0,r.kt)("inlineCode",{parentName:"p"},"etcd")," que es la encaragda de almancenar las rutas y\nlos estados de los workers")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Cada nodo tiene su propia ip"))),(0,r.kt)("h3",{id:"servicios"},"Servicios"),(0,r.kt)("p",null,"Los servicios en kubernetes son una forma de poder contactar un set de pods ya sea desde adentro\ndel cluster o desde afuera."),(0,r.kt)("p",null,"Utilizaremos como base este manifiesto de deployment"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title='deployment.yaml'",title:"'deployment.yaml'"},"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: hello\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      role: hello\n  template:\n    metadata:\n      labels:\n        role: hello\n    spec:\n      containers:\n      - name: hello\n        image: gcr.io/google-samples/hello-app:1.0\n        ports:\n        - containerPort: 8080\n")),(0,r.kt)("p",null,"Principalmente hay 3 servicios en Kubernetes."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Clusterip Crea una ip fija  privada que esta dentro del cluster, que basicamente sirve como\n",(0,r.kt)("inlineCode",{parentName:"li"},"loadbalancer")," entre todos los pods que le asigne a ese servicio, es decir, yo me puedo conecar a un pod\ny hacer un ping a es ip fija y la debe resolver.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title='cluster-ip.yaml' {6,11}",title:"'cluster-ip.yaml'","{6,11}":!0},"apiVersion: v1\nkind: Service\nmetadata:\n  name: hello\nspec:\n  type: ClusterIP\n  ports:\n  - port: 8080\n    targetPort: 8080\n  selector:\n    role: hello\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Node port es otro servicio en kubernetes, este crea un puerto en cada nodo que va a recibir el trafico\ny lo va a mandar a los pods que tenga ese servicio.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title='node-port.yaml' {6,10,12}",title:"'node-port.yaml'","{6,10,12}":!0},"apiVersion: v1\nkind: Service\nmetadata:\n  name: hello\nspec:\n  type: NodePort\n  ports:\n  - port: 8080\n    targetPort: 8080\n    nodePort: 30000\n  selector:\n    role: hello\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Loadbalancer esta mas atado a la nube, lo que hara kubernetes es crear un balanceador de carga en nuestro\nproveedor de nube y redireccionar el trafico por nuestros pods.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title='load-balancer.yaml' {6,11}",title:"'load-balancer.yaml'","{6,11}":!0},"apiVersion: v1\nkind: Service\nmetadata:\n  name: hello\nspec:\n  type: LoadBalancer\n  ports:\n  - port: 8080\n    targetPort: 8080\n  selector:\n    role: hello\n")),(0,r.kt)("h3",{id:"ingress"},"Ingress"),(0,r.kt)("p",null,"Basicamente lo que hace el ingress es un nuevo tipo de recurso en kubernetes que te permite hacer redirecciones\nde trafico sobre tus pods de formas mas avanzadas, por ejemplo path base. Redirecciono a que pod quiero ir\npor medio del path asi no debo estar creando subdominios, etc."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: hello-app\nspec:\n  rules:\n  - http:\n      paths:\n      - path: /v1\n        pathType: Prefix\n        backend:\n          service:\n            name: hello-v1\n            port:\n              number: 8080\n      - path: /v2\n        pathType: Prefix\n        backend:\n          service:\n            name: hello-v2\n            port:\n              number: 8080\n")),(0,r.kt)("h2",{id:"configmaps"},"ConfigMaps"),(0,r.kt)("p",null,"Es un archivo que lo hosteo en kubernetes el cual puede ser accedido desde los pods."),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Esto puede ser usado para generar archivos de configuracion por stage o para las variables\nde entorno"))),(0,r.kt)("h3",{id:"manifiesto-3"},"Manifiesto"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title='config-map.yaml'",title:"'config-map.yaml'"},'apiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: game-demo\ndata:\n  # property-like keys; each key maps to a simple value\n  player_initial_lives: "3"\n  ui_properties_file_name: "user-interface.properties"\n  #\n  # file-like keys\n  game.properties: |\n    enemy.types=aliens,monsters\n    player.maximum-lives=5\n  user-interface.properties: |\n    color.good=purple\n    color.bad=yellow\n    allow.textmode=true\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title='pod.yaml'",title:"'pod.yaml'"},'apiVersion: v1\nkind: Pod\nmetadata:\n  name: nginx\nspec:\n  containers:\n    - name: nginx\n      image: nginx:alpine\n      env:\n        # Define the environment variable\n        - name: PLAYER_INITIAL_LIVES # Nombre de la variable\n          valueFrom:\n            configMapKeyRef:\n              name: game-demo           # El confimap desde donde vienen los valores\n              key: player_initial_lives # La key que vamos a usar\n        - name: UI_PROPERTIES_FILE_NAME\n          valueFrom:\n            configMapKeyRef:\n              name: game-demo\n              key: ui_properties_file_name\n      volumeMounts:\n      - name: config\n        mountPath: "/config"\n        readOnly: true\n  volumes:\n    - name: config\n      configMap:\n        name: game-demo # el nombre del configmap que queremos montar\n        items: # Un arreglo de keys del configmap para crear como archivos\n        - key: "game.properties"\n          path: "game.properties"\n        - key: "user-interface.properties"\n          path: "user-interface.properties"\n')),(0,r.kt)("h2",{id:"secrets"},"Secrets"),(0,r.kt)("p",null,"Es una forma de codificar nuestros secretos en base64 con el fin de que una persona normal\nal verlo no sepa los valores de dichos secretos."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"title='secrets.yaml'",title:"'secrets.yaml'"},"apiVersion: v1\nkind: Secret\nmetadata:\n  name: db-credentials\ntype: Opaque\ndata:\n  username: YWRtaW4=\n  password: c3VwM3JwYXNzdzByZAo=\n")),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Otra forma de hacerlo mas a mano es la siguiente:"),(0,r.kt)("pre",{parentName:"div"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"kubectl create secret generic db-credentials \\\n--from-literal=username=admin \\\n--from-literal=password=sup3rpassw0rd\n")))),(0,r.kt)("p",null,"Para mas informacion podemos visitar la\n",(0,r.kt)("a",{parentName:"p",href:"https://kubernetes.io/es/docs/concepts/configuration/secret/"},"documentacion")))}m.isMDXComponent=!0}}]);